#!/bin/bash

# This script is used to apply a fix for CVE-2025-27152 on a NS8 module.
# See: https://github.com/advisories/ghsa-jr5f-v2jv-69x6

set -e

# remember to update the CVE and branch name as needed
CVE="CVE-2025-27152"
BRANCH="axios-$CVE"

# check first argument is provided
if [ -z "$1" ]; then
  echo "Usage: $0 <owner/repo>"
  echo "Example: $0 NethServer/ns8-kickstart"
  exit 1
fi

# assign the first argument to OWNER_AND_REPO
OWNER_AND_REPO="$1"

# check if gh is installed
if ! command -v gh &> /dev/null; then
  echo "gh (GitHub CLI) is not installed. Please install it first."
  exit 1
fi

# check if logged in to GitHub
if ! gh auth status &> /dev/null; then
  echo "You are not logged in to GitHub. Please log in using 'gh auth login'."
  exit 1
fi

# ensure yarn version is 1.22.x
if ! yarn --version | grep -qE '^1\.22\..+$'; then
  echo "Yarn version is not compatible, 1.22.x is required"
  exit 1
fi

# split REPO variable into owner and repo name
IFS='/' read -r OWNER REPO <<< "$OWNER_AND_REPO"

cd ~/git

echo git@github.com:"$OWNER_AND_REPO"

# clone the repository if it doesn't exist
if [ ! -d "$REPO" ]; then
  git clone git@github.com:"$OWNER_AND_REPO"
else
  echo "Repository $REPO already exists, skipping clone."
fi

cd "$REPO"
git checkout main
git pull origin main

# check if branch already exists
if git show-ref --verify --quiet refs/heads/"$BRANCH"; then
  echo "Branch $BRANCH already exists, checking out."
  git checkout "$BRANCH"
else
  echo "Creating new branch $BRANCH."
  git checkout -b "$BRANCH"
fi

cd ui

# ensure axios is installed
if ! yarn list --pattern axios | grep -q ' axios@'; then
  echo "axios is not installed, quitting."
  exit 1
fi

# find axios version
AXIOS_VERSION=$(yarn list --pattern axios | grep ' axios@' | awk -F '@' '{print $2}')

echo "Current axios version: $AXIOS_VERSION"

# check if the version is 1.11.0 or higher
if [[ "$(printf '%s\n' "$AXIOS_VERSION" "1.11.0" | sort -V | head -n1)" == "1.11.0" ]]; then
  echo "axios version is >= 1.11.0, quitting."
  exit 1
fi

# install latest version of axios
yarn add axios

# check if the version is 1.11.0 or higher after installation
NEW_AXIOS_VERSION=$(yarn list --pattern axios | grep ' axios@' | awk -F '@' '{print $2}')

echo "axios updated to version $NEW_AXIOS_VERSION"

# ensure the build works with the new version
NODE_OPTIONS=--openssl-legacy-provider yarn build

# ask for confirmation before making changes
read -p "Do you want to commit and create a pull request? (y/N): " confirm
if [[ "$confirm" != "y" ]]; then
  echo "No changes were made. Exiting now"
  exit 0
fi

git add -A
git commit -m "fix: axios $CVE"
git push --set-upstream origin "$BRANCH"

# create a pull request
gh pr create --title "fix: axios $CVE" --body "Fix $CVE" --reviewer Tbaile
